
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author conno
 */
public class JobDescriptionGUI extends javax.swing.JFrame {

    static String[] txtArray;
    static String[] wordsRead;
    static String[] compArray;
    static Statement stmt;
    static Connection con;
    static int count = 0;

    /**
     * Creates new form JobDescriptionGUI
     */
    public JobDescriptionGUI() {
        initComponents();
        count = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        JobDescriptionTextArea = new javax.swing.JTextArea();
        saveButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        JobDescriptionTextArea.setColumns(20);
        JobDescriptionTextArea.setRows(5);
        jScrollPane1.setViewportView(JobDescriptionTextArea);

        saveButton.setText("Save & Close");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Please Enter The Job Langauge Requirements Below: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(171, 171, 171)
                .addComponent(saveButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        FileChooser.infoCv.setText("");
        String[] wordsRead = JobDescriptionTextArea.getText().split("[ \nâ€¢  ,():;	]");
        String merge;
        String s;

        //this is made to a size that realistically will never be reached
        txtArray = new String[100];

        compArray = Converter.getcompArray();
        stmt = Converter.getstmt();
        con = Converter.getcon();

        for (int i = 0; i < wordsRead.length; i++) {
            merge = "";

            s = wordsRead[i];

            //remove punctuation at the end of words
            if (s.endsWith(".") || s.endsWith(",") || s.endsWith("(") || s.endsWith(")")) {
                s = s.substring(0, s.length() - 1);
            }

            if (wordsRead[i].equalsIgnoreCase("Delphi")) {
                merge = "Delphi/Object-Pascal";
            }
            if (i > 0) {
                //set permutations of specific languages
                if (wordsRead[i - 1].equalsIgnoreCase("Visual") && wordsRead[i].equalsIgnoreCase("Basic")) {
                    merge = wordsRead[i - 1] + wordsRead[i];
                }
                if (wordsRead[i - 1].equalsIgnoreCase("Assembly") && wordsRead[i].equalsIgnoreCase("Language")) {
                    merge = wordsRead[i - 1] + " " + wordsRead[i];
                }
                if (wordsRead[i - 1].equalsIgnoreCase("Visual") && wordsRead[i].equalsIgnoreCase("Basic.net")) {
                    merge = wordsRead[i - 1] + wordsRead[i];
                }
                if (wordsRead[i - 1].equalsIgnoreCase("Delphi/Object") && wordsRead[i].equalsIgnoreCase("Pascal")) {
                    merge = wordsRead[i - 1] + wordsRead[i];
                }
                if (wordsRead[i - 1].equalsIgnoreCase("Object") && wordsRead[i].equalsIgnoreCase("Pascal")) {
                    merge = "Delphi/Object-Pascal";
                }
                if (wordsRead[i - 1].equalsIgnoreCase("Delphi/Object") && wordsRead[i].equalsIgnoreCase("Pascal")) {
                    merge = "Delphi/Object-Pascal";
                }

            }

            //compare words to know languages to check for match
            for (int j = 0; j < compArray.length; j++) {

                //if the languages match, go to percentages method
                if (s.equalsIgnoreCase(compArray[j])) {
                    txtArray[count] = compArray[j];
                    count++;
                    break;
                }
                //if permutation match then go to percentages method
                if (merge.equalsIgnoreCase(compArray[j])) {
                    txtArray[count] = compArray[j];
                    count++;
                    break;
                }
            }
        }

        for (int i = 0; i < count; i++) {
            if (txtArray[i] != null) {
                FileChooser.infoCv.append(txtArray[i] + "\n");
            }
        }

        this.dispose();


    }//GEN-LAST:event_saveButtonActionPerformed

    public static String[] read() {
        System.out.println(txtArray.length);
        return txtArray;
    }

    public static int getCount() {
        return count;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextArea JobDescriptionTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables

}
